{
  "feature_name": "e2e-test-environment-setup",
  "created_at": "2025-10-02T00:00:00Z",
  "updated_at": "2025-10-02T15:30:00Z",
  "language": "ja",
  "phase": "requirements-generated",
  "source": {
    "type": "github_issue",
    "issue_number": 12,
    "url": "https://github.com/ef-tech/laravel-next-b2c/issues/12",
    "title": "E2E テスト環境基盤設定",
    "labels": [],
    "milestone": null,
    "assignees": []
  },
  "extracted_info": {
    "tech_stack": {
      "backend": "Laravel 12 API, Laravel Sanctum",
      "frontend": "Next.js 15.5, React 19",
      "infrastructure": "Docker Compose, GitHub Actions",
      "tools": "Playwright 1.47.2, TypeScript 5.6.2, dotenv 16.4.5"
    },
    "requirements_hints": [
      "E2Eテストによるエンドツーエンドの動作検証",
      "実際のユーザー操作フローの自動検証",
      "フロントエンド・バックエンド統合部分のバグ早期発見",
      "並列実行可能なE2Eテストパイプライン構築",
      "Playwrightの強力なデバッグ機能による効率的なテスト作成"
    ],
    "project_structure": [
      "e2e/playwright.config.ts",
      "e2e/package.json",
      "e2e/tsconfig.json",
      "e2e/fixtures/global-setup.ts",
      "e2e/helpers/sanctum.ts",
      "e2e/storage/admin.json",
      "e2e/storage/user.json",
      "e2e/projects/admin/pages/LoginPage.ts",
      "e2e/projects/admin/pages/ProductsPage.ts",
      "e2e/projects/admin/tests/login.spec.ts",
      "e2e/projects/admin/tests/products-crud.spec.ts",
      "e2e/projects/user/tests/api-integration.spec.ts",
      "e2e/docker/Dockerfile.e2e",
      ".github/workflows/e2e-tests.yml"
    ],
    "services": {
      "admin-app": {
        "port": "3000",
        "docker_port": "3001"
      },
      "user-app": {
        "port": "3000",
        "docker_port": "3000"
      },
      "laravel-api": {
        "port": "8000",
        "docker_port": "80"
      },
      "e2e-tests": {
        "image": "mcr.microsoft.com/playwright:v1.47.2-jammy",
        "shm_size": "1gb"
      }
    },
    "todo_items": [
      "e2eディレクトリ作成",
      "Playwrightインストール",
      "playwright.config.ts作成",
      "sanctum.ts実装",
      "global-setup.ts実装",
      "Page Object Model実装",
      "ログインテスト作成",
      "CRUDテスト作成",
      "Dockerfile.e2e作成",
      "docker-compose.ymlサービス追加",
      "GitHub Actionsワークフロー作成",
      "ローカルでテスト実行成功",
      "Docker環境でテスト実行成功",
      "CI/CDパイプライン成功"
    ]
  },
  "approvals": {
    "requirements": {
      "generated": true,
      "approved": false
    },
    "design": {
      "generated": false,
      "approved": false
    },
    "tasks": {
      "generated": false,
      "approved": false
    }
  },
  "ready_for_implementation": false
}
