# ============================================
# Frontend Environment Variables
# ============================================

# NEXT_PUBLIC_API_URL
# - 説明: Laravel APIのベースURL（フロントエンドからアクセス）
# - 必須: はい
# - 環境: 開発環境=http://localhost:13000, 本番環境=https://api.example.com
# - セキュリティ: 公開可（NEXT_PUBLIC_プレフィックス）
# - デフォルト: http://localhost:13000
# - 注意事項: NEXT_PUBLIC_プレフィックスがないとクライアント側で利用不可
NEXT_PUBLIC_API_URL=http://localhost:13000

# ============================================
# Laravel API Environment Variables
# ============================================
APP_NAME=Laravel
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

SAIL_XDEBUG_MODE=develop,debug,coverage

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# Database Configuration
# デフォルト: SQLite (高速開発用)
# PostgreSQL設定は backend/laravel-api/.env.example を参照
DB_CONNECTION=sqlite

# PostgreSQL接続設定（Docker環境）
# 詳細は backend/laravel-api/.env.example 参照
# DB_CONNECTION=pgsql
# DB_HOST=pgsql
# DB_PORT=5432
# DB_DATABASE=laravel
# DB_USERNAME=sail
# DB_PASSWORD=password

# PostgreSQL接続設定（ネイティブ環境）
# 詳細は backend/laravel-api/.env.example 参照
# DB_CONNECTION=pgsql
# DB_HOST=127.0.0.1
# DB_PORT=13432
# DB_DATABASE=laravel
# DB_USERNAME=sail
# DB_PASSWORD=password

SESSION_DRIVER=array
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

# ============================================
# Docker Port Configuration
# ============================================

# APP_PORT
# - 説明: Laravel APIのポート番号
# - 必須: はい
# - 環境: 開発環境=13000, 本番環境=8000
# - セキュリティ: 公開可
# - デフォルト: 13000
# - 注意事項: Docker Composeのポートマッピングと一致させること
APP_PORT=13000

# FORWARD_REDIS_PORT
# - 説明: Redisのポート番号（ホストからアクセス用）
# - 必須: はい
# - 環境: 開発環境=13379, 本番環境=6379
# - セキュリティ: 公開可
# - デフォルト: 13379
# - 注意事項: 他のプロジェクトとのポート競合に注意
FORWARD_REDIS_PORT=13379

# FORWARD_MAILPIT_PORT
# - 説明: Mailpit SMTPポート番号（開発用メールサーバー）
# - 必須: いいえ
# - 環境: 開発環境=11025
# - セキュリティ: 公開可
# - デフォルト: 11025
# - 注意事項: 開発環境のみ使用、本番環境では不要
FORWARD_MAILPIT_PORT=11025

# FORWARD_MAILPIT_DASHBOARD_PORT
# - 説明: Mailpit UIポート番号（メール確認画面）
# - 必須: いいえ
# - 環境: 開発環境=13025
# - セキュリティ: 公開可
# - デフォルト: 13025
# - 注意事項: http://localhost:13025 でメール確認画面にアクセス可能
FORWARD_MAILPIT_DASHBOARD_PORT=13025

# FORWARD_DB_PORT
# - 説明: PostgreSQLのポート番号（ホストからアクセス用）
# - 必須: はい
# - 環境: 開発環境=13432, 本番環境=5432
# - セキュリティ: 公開可
# - デフォルト: 13432
# - 注意事項: 他のプロジェクトとのポート競合に注意
FORWARD_DB_PORT=13432

# FORWARD_MINIO_PORT
# - 説明: MinIO APIポート番号（オブジェクトストレージ）
# - 必須: いいえ
# - 環境: 開発環境=13900
# - セキュリティ: 公開可
# - デフォルト: 13900
# - 注意事項: S3互換APIエンドポイント
FORWARD_MINIO_PORT=13900

# FORWARD_MINIO_CONSOLE_PORT
# - 説明: MinIO Consoleポート番号（管理画面）
# - 必須: いいえ
# - 環境: 開発環境=13010
# - セキュリティ: 公開可
# - デフォルト: 13010
# - 注意事項: http://localhost:13010 でMinIO管理画面にアクセス可能
FORWARD_MINIO_CONSOLE_PORT=13010

# ============================================
# E2E Tests Environment Variables
# ============================================

# E2E_ADMIN_URL
# - 説明: Admin AppのURL（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=http://localhost:13002, CI環境=http://localhost:13002
# - セキュリティ: 公開可
# - デフォルト: http://localhost:13002
# - 注意事項: E2Eテスト実行時に使用、本番環境では別URLを設定
E2E_ADMIN_URL=http://localhost:13002

# E2E_USER_URL
# - 説明: User AppのURL（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=http://localhost:13001, CI環境=http://localhost:13001
# - セキュリティ: 公開可
# - デフォルト: http://localhost:13001
# - 注意事項: E2Eテスト実行時に使用、本番環境では別URLを設定
E2E_USER_URL=http://localhost:13001

# E2E_API_URL
# - 説明: Laravel APIのURL（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=http://localhost:13000, CI環境=http://localhost:13000
# - セキュリティ: 公開可
# - デフォルト: http://localhost:13000
# - 注意事項: E2Eテスト実行時に使用、本番環境では別URLを設定
E2E_API_URL=http://localhost:13000

# E2E_ADMIN_EMAIL
# - 説明: 管理者メールアドレス（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=admin@example.com
# - セキュリティ: 機密（テスト用のため低リスク）
# - デフォルト: admin@example.com
# - 注意事項: 本番環境では異なる認証情報を使用すること
E2E_ADMIN_EMAIL=admin@example.com

# E2E_ADMIN_PASSWORD
# - 説明: 管理者パスワード（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=password
# - セキュリティ: 極秘（テスト用のため低リスク）
# - デフォルト: password
# - 注意事項: 本番環境では絶対に使用しないこと
E2E_ADMIN_PASSWORD=password

# E2E_USER_EMAIL
# - 説明: ユーザーメールアドレス（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=user@example.com
# - セキュリティ: 機密（テスト用のため低リスク）
# - デフォルト: user@example.com
# - 注意事項: 本番環境では異なる認証情報を使用すること
E2E_USER_EMAIL=user@example.com

# E2E_USER_PASSWORD
# - 説明: ユーザーパスワード（E2Eテスト用）
# - 必須: はい（E2Eテスト実行時）
# - 環境: 開発環境=password
# - セキュリティ: 極秘（テスト用のため低リスク）
# - デフォルト: password
# - 注意事項: 本番環境では絶対に使用しないこと
E2E_USER_PASSWORD=password

# ============================================
# Docker Compose User/Group Configuration
# ============================================

# WWWUSER
# - 説明: DockerコンテナのWebサーバーユーザーID
# - 必須: はい（Docker環境）
# - 環境: 開発環境=1000, 本番環境=1000
# - セキュリティ: 公開可
# - デフォルト: 1000
# - 注意事項: ホストマシンのユーザーIDと一致させること（`id -u`で確認）
WWWUSER=1000

# WWWGROUP
# - 説明: DockerコンテナのWebサーバーグループID
# - 必須: はい（Docker環境）
# - 環境: 開発環境=1000, 本番環境=1000
# - セキュリティ: 公開可
# - デフォルト: 1000
# - 注意事項: ホストマシンのグループIDと一致させること（`id -g`で確認）
WWWGROUP=1000
