APP_NAME=Laravel
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

SAIL_XDEBUG_MODE=develop,debug,coverage

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# --- Database Configuration ---
# デフォルトはSQLite（軽量・高速開発用）
# PostgreSQLに切り替える場合は、下記のいずれかのセクションをコメント解除してください
DB_CONNECTION=sqlite

# --- PostgreSQL Configuration (Docker環境用) ---
# Docker Compose環境で使用する設定
# service名でホスト指定、ポート13432、SSL不要
# DB_CONNECTION=pgsql
# DB_HOST=pgsql                    # Docker内: service名
# DB_PORT=13432                    # Docker内: 13432（内部・外部とも統一）
# DB_DATABASE=laravel
# DB_USERNAME=sail
# DB_PASSWORD=password
# DB_SSLMODE=disable               # ローカル環境はSSL不要
# DB_SEARCH_PATH=public            # PostgreSQLスキーマ（デフォルト: public）

# --- PostgreSQL Configuration (ネイティブ環境用) ---
# ホストマシンからDockerコンテナのPostgreSQLに接続する設定
# ローカルホスト指定、外部公開ポート13432、SSL推奨
# DB_CONNECTION=pgsql
# DB_HOST=127.0.0.1                # ネイティブ: localhost
# DB_PORT=13432                    # ネイティブ: 外部公開ポート
# DB_DATABASE=laravel
# DB_USERNAME=sail
# DB_PASSWORD=password
# DB_SSLMODE=prefer                # SSL推奨（利用可能なら使用）
# DB_SEARCH_PATH=public

# --- PostgreSQL Configuration (本番環境用) ---
# 本番環境での推奨設定（SSL必須、証明書検証）
# DB_CONNECTION=pgsql
# DB_HOST=your-production-host.example.com
# DB_PORT=5432
# DB_DATABASE=production_db
# DB_USERNAME=production_user
# DB_PASSWORD=strong_password_here
# DB_SSLMODE=verify-full           # SSL必須（証明書検証）
# DB_SSLROOTCERT=/path/to/ca-certificate.crt
# DB_SSLCERT=/path/to/client-certificate.crt
# DB_SSLKEY=/path/to/client-key.key
# DB_SEARCH_PATH=public

# --- PostgreSQL Timeout Configuration ---
# タイムアウト設定（ミリ秒単位）
# statement_timeout: クエリ実行タイムアウト（デフォルト: 60秒）
# idle_in_transaction_session_timeout: トランザクション放置タイムアウト（デフォルト: 60秒）
# lock_timeout: ロック待機タイムアウト（デフォルト: 0=無制限）
# connect_timeout: 接続タイムアウト（秒単位、デフォルト: 5秒）
# DB_STATEMENT_TIMEOUT=60000       # 60秒（長時間クエリ防止）
# DB_IDLE_TX_TIMEOUT=60000         # 60秒（放置トランザクション防止）
# DB_LOCK_TIMEOUT=0                # デッドロック即座検知
# DB_CONNECT_TIMEOUT=5             # 5秒（接続タイムアウト）

# --- PostgreSQL PDO Configuration ---
# PDO属性設定
# EMULATE_PREPARES: サーバー側プリペアドステートメントのエミュレーション（デフォルト: true）
#   - true: クライアント側でエミュレート（接続プール対応、サーバー側ステートメント蓄積回避）
#   - false: サーバー側でネイティブプリペアドステートメント（パフォーマンス向上、接続プールと相性悪い）
# DB_EMULATE_PREPARES=true

# --- PostgreSQL Application Configuration ---
# アプリケーション識別名（PostgreSQLログに記録、監視・トラブルシューティングに有用）
# DB_APP_NAME=laravel-next-b2c-api

SESSION_DRIVER=array
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false


APP_PORT=13000
FORWARD_REDIS_PORT=13379
FORWARD_MAILPIT_PORT=11025
FORWARD_MAILPIT_DASHBOARD_PORT=13025
FORWARD_DB_PORT=13432
FORWARD_MINIO_PORT=13900
FORWARD_MINIO_CONSOLE_PORT=13010
