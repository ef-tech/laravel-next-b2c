<?php

declare(strict_types=1);

/**
 * レート制限設定
 *
 * エンドポイントごとの動的レート制限設定を管理します。
 * ログイン、認証済みAPI、公開APIなど、エンドポイントタイプ別の制限値を定義します。
 *
 * Requirements: 3.2, 3.7, 3.8, 3.9, 3.11, 13.2
 */
return [
    /*
    |--------------------------------------------------------------------------
    | エンドポイント別レート制限設定
    |--------------------------------------------------------------------------
    |
    | 各エンドポイントタイプのレート制限設定です。
    | 環境変数で設定を上書き可能（.env.exampleを参照）
    |
    | - requests: 許可するリクエスト数（環境変数: RATELIMIT_{ENDPOINT}_REQUESTS）
    | - per_minute: レート制限の時間単位（分）（環境変数: RATELIMIT_{ENDPOINT}_PER_MINUTE）
    | - by: レート制限の識別子（ip/user/token）（環境変数: RATELIMIT_{ENDPOINT}_BY）
    |
    | ⚠️ 設定変更時の影響:
    | - requests を増やす: サーバー負荷増加、DDoS耐性低下
    | - requests を減らす: ユーザー体験悪化、正常利用者への影響
    | - by を変更: キャッシュキーが変わるため既存制限がリセットされる
    |
    */
    'endpoints' => [
        /*
        |----------------------------------------------------------------------
        | APIエンドポイント（認証済みユーザー）
        |----------------------------------------------------------------------
        |
        | 認証されたユーザーのAPI利用制限
        |
        | 推奨設定値: 60-120 req/min
        | 識別方法: ip（デフォルト）または user（認証済み）
        |
        | 💡 設定のポイント:
        | - 通常のAPI利用では60 req/minで十分（1秒に1リクエスト）
        | - リアルタイムアプリケーション（チャット等）は120 req/min推奨
        | - 'by' を 'user' にするとユーザーID単位で制限可能
        |
        */
        'api' => [
            'requests' => (int) env('RATELIMIT_API_REQUESTS', 60),
            'per_minute' => (int) env('RATELIMIT_API_PER_MINUTE', 1),
            'by' => env('RATELIMIT_API_BY', 'ip'),
        ],

        /*
        |----------------------------------------------------------------------
        | Publicエンドポイント（未認証ユーザー）
        |----------------------------------------------------------------------
        |
        | 認証不要の公開API制限
        |
        | 推奨設定値: 30-60 req/min
        | 識別方法: ip（IPアドレス単位）
        |
        | 💡 設定のポイント:
        | - 認証済みより厳しく設定（DDoS対策）
        | - ログイン前のページ表示・登録フォーム等で使用
        | - 'by' は必ず 'ip' を使用（未認証のためユーザー識別不可）
        |
        */
        'public' => [
            'requests' => (int) env('RATELIMIT_PUBLIC_REQUESTS', 30),
            'per_minute' => (int) env('RATELIMIT_PUBLIC_PER_MINUTE', 1),
            'by' => env('RATELIMIT_PUBLIC_BY', 'ip'),
        ],

        /*
        |----------------------------------------------------------------------
        | Webhookエンドポイント（外部サービス連携）
        |----------------------------------------------------------------------
        |
        | 外部サービスからのWebhook受信制限
        |
        | 推奨設定値: 100-200 req/min
        | 識別方法: ip（送信元IPアドレス単位）
        |
        | 💡 設定のポイント:
        | - Stripe, GitHub等のWebhook受信で使用
        | - 外部サービスのリトライ挙動を考慮して高めに設定
        | - 特定サービスが高頻度の場合は個別に調整
        |
        */
        'webhook' => [
            'requests' => (int) env('RATELIMIT_WEBHOOK_REQUESTS', 100),
            'per_minute' => (int) env('RATELIMIT_WEBHOOK_PER_MINUTE', 1),
            'by' => env('RATELIMIT_WEBHOOK_BY', 'ip'),
        ],

        /*
        |----------------------------------------------------------------------
        | Strictエンドポイント（管理者API・機密操作）
        |----------------------------------------------------------------------
        |
        | サーバー間通信や管理者用API制限
        |
        | 推奨設定値: 10-20 req/min
        | 識別方法: user（ユーザーID単位）
        |
        | 💡 設定のポイント:
        | - 機密性の高い操作（ユーザー削除、権限変更等）で使用
        | - 厳しい制限により不正操作リスクを最小化
        | - 'by' を 'user' にして認証済みユーザー単位で制限
        |
        */
        'strict' => [
            'requests' => (int) env('RATELIMIT_STRICT_REQUESTS', 10),
            'per_minute' => (int) env('RATELIMIT_STRICT_PER_MINUTE', 1),
            'by' => env('RATELIMIT_STRICT_BY', 'user'),
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | キャッシュストア設定
    |--------------------------------------------------------------------------
    |
    | レート制限カウンターの保存先設定です。
    | Redisを使用して高速な分散カウントを実現します。
    |
    | テスト環境では RATELIMIT_CACHE_STORE=array を設定することで、
    | インメモリキャッシュを使用してテスト間の干渉を防ぐことができます。
    |
    */
    'cache' => [
        'store' => env('RATELIMIT_CACHE_STORE', 'redis'),
        'prefix' => 'rate_limit',
    ],
];
